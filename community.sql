
DROP TABLE IF EXISTS COMMUNITY CASCADE;
CREATE TABLE COMMUNITY(
    COMMUNITY_ID SERIAL PRIMARY KEY,
    COMMUNITY_NAME VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(500) NOT NULL,
    CRITERIA VARCHAR(500) NOT NULL,
    DATE_OF_CREATION DATE NOT NULL
);


DROP TABLE IF EXISTS MODERATOR CASCADE;
CREATE TABLE MODERATOR(
    COMMUNITY_ID INTEGER NOT NULL REFERENCES COMMUNITY(COMMUNITY_ID) ON DELETE CASCADE,
    USER_ID INTEGER NOT NULL REFERENCES USER_TABLE(STD_ID) ON DELETE CASCADE,
    PRIMARY KEY(COMMUNITY_ID, USER_ID)
);

DROP TABLE IF EXISTS COMM_MEMBERS;
CREATE TABLE COMM_MEMBERS(
    COMMUNITY_ID INTEGER NOT NULL REFERENCES COMMUNITY(COMMUNITY_ID) ON DELETE CASCADE,
    USER_ID INTEGER NOT NULL REFERENCES USER_TABLE(STD_ID) ON DELETE CASCADE,
    JOIN_DATE DATE NOT NULL,
    PRIMARY KEY(COMMUNITY_ID, USER_ID)
);

DROP TABLE IF EXISTS JOIN_REQUEST;
CREATE TABLE JOIN_REQUEST(
    COMMUNITY_ID NUMBER(5) NOT NULL REFERENCES COMMUNITY(COMMUNITY_ID) ON DELETE CASCADE,
    USER_ID NUMBER(10) NOT NULL REFERENCES USER_TABLE(STD_ID) ON DELETE CASCADE,
    REQUEST_TIME DATE NOT NULL,
    PRIMARY KEY(COMMUNITY_ID, USER_ID)
);

DROP TABLE IF EXISTS COMMUNITY_POST CASCADE;
CREATE TABLE COMMUNITY_POST(
    POST_ID SERIAL,
    DATE_OF_POST DATE NOT NULL,
    DESCRIPTION VARCHAR(500) NOT NULL,
    PRIMARY KEY (POST_ID)
);


DROP TABLE IF EXISTS COMMUNITY_HELP;
CREATE TABLE COMMUNITY_HELP(
    POST_ID INTEGER NOT NULL REFERENCES COMMUNITY_POST(POST_ID) ON DELETE CASCADE,
    TYPE_OF_HELP VARCHAR(100) NOT NULL,
    REASON VARCHAR(300) NOT NULL,
    CELL_NO VARCHAR(15),
    PHOTO VARCHAR(200),
    PRIMARY KEY (POST_ID)
);


DROP TABLE IF EXISTS COMMUNITY_CAREER;
CREATE TABLE COMMUNITY_CAREER(
    POST_ID INTEGER NOT NULL REFERENCES COMMUNITY_POST(POST_ID) ON DELETE CASCADE,
    TOPIC_NAME VARCHAR(100) NOT NULL,
    PHOTO VARCHAR(50),
    VIDEO VARCHAR(50),
    PRIMARY KEY (POST_ID)
);



DROP TABLE IF EXISTS COMMUNITY_RESEARCH;
CREATE TABLE COMMUNITY_RESEARCH(
    POST_ID INTEGER NOT NULL REFERENCES COMMUNITY_POST(POST_ID) ON DELETE CASCADE,
    TOPIC_NAME VARCHAR(100) NOT NULL,
    DATE_OF_PUBLICATION DATE ,
    JOURNAL VARCHAR(50) ,
    DOI VARCHAR(100),
    PHOTO VARCHAR(200),
    PRIMARY KEY (POST_ID)
);



DROP TABLE IF EXISTS COMMUNITY_JOB_POST;
CREATE TABLE COMMUNITY_JOB_POST(
    POST_ID INTEGER NOT NULL REFERENCES COMMUNITY_POST(POST_ID) ON DELETE CASCADE,
    COMPANY_NAME VARCHAR(100) NOT NULL,
    LOCATION VARCHAR(300) NOT NULL,
    REQUIREMENTS VARCHAR(500) NOT NULL,
    DESIGNATION VARCHAR(50) NOT NULL,
    SALARY INTEGER,
    PHOTO VARCHAR(200),
    PRIMARY KEY (POST_ID)
);


DROP TABLE IF EXISTS COMMUNITY_USER_POSTS;
CREATE TABLE COMMUNITY_USER_POSTS(
    USER_ID INTEGER NOT NULL REFERENCES USER_TABLE(STD_ID) ON DELETE CASCADE,
    POST_ID INTEGER NOT NULL REFERENCES COMMUNITY_POST(POST_ID) ON DELETE CASCADE,
    COMMUNITY_ID INTEGER NOT NULL REFERENCES COMMUNITY(COMMUNITY_ID) ON DELETE CASCADE,
    PRIMARY KEY(POST_ID)
);


DROP TABLE IF EXISTS COMMUNITY_USER_REPLIES;
CREATE TABLE COMMUNITY_USER_REPLIES(
    USR_REPLS_ROW SERIAL,
    USER_ID INTEGER NOT NULL REFERENCES USER_TABLE(STD_ID) ON DELETE CASCADE,
    POST_ID INTEGER NOT NULL REFERENCES COMMUNITY_POST(POST_ID) ON DELETE CASCADE ,
    COMMUNITY_ID INTEGER NOT NULL REFERENCES COMMUNITY(COMMUNITY_ID) ON DELETE CASCADE,
    TEXT VARCHAR(150) NOT NULL,
    TIMESTAMP DATE NOT NULL,
    PRIMARY KEY(USR_REPLS_ROW)
);






